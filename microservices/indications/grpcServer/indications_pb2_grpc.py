# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import grpcServer.indications_pb2 as indications__pb2


class IndicationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.post_indications = channel.unary_unary(
                '/Indications/post_indications',
                request_serializer=indications__pb2.PostIndicationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_indications = channel.unary_unary(
                '/Indications/get_indications',
                request_serializer=indications__pb2.GetIndicationsRequest.SerializeToString,
                response_deserializer=indications__pb2.IndicationsResponse.FromString,
                )
        self.post_indication_type = channel.unary_unary(
                '/Indications/post_indication_type',
                request_serializer=indications__pb2.PostIndicationTypeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_indication_types = channel.unary_unary(
                '/Indications/get_indication_types',
                request_serializer=indications__pb2.GetIndicationsTypesRequest.SerializeToString,
                response_deserializer=indications__pb2.IndicationsTypesResponse.FromString,
                )


class IndicationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def post_indications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_indications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def post_indication_type(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_indication_types(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndicationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'post_indications': grpc.unary_unary_rpc_method_handler(
                    servicer.post_indications,
                    request_deserializer=indications__pb2.PostIndicationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_indications': grpc.unary_unary_rpc_method_handler(
                    servicer.get_indications,
                    request_deserializer=indications__pb2.GetIndicationsRequest.FromString,
                    response_serializer=indications__pb2.IndicationsResponse.SerializeToString,
            ),
            'post_indication_type': grpc.unary_unary_rpc_method_handler(
                    servicer.post_indication_type,
                    request_deserializer=indications__pb2.PostIndicationTypeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_indication_types': grpc.unary_unary_rpc_method_handler(
                    servicer.get_indication_types,
                    request_deserializer=indications__pb2.GetIndicationsTypesRequest.FromString,
                    response_serializer=indications__pb2.IndicationsTypesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Indications', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Indications(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def post_indications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Indications/post_indications',
            indications__pb2.PostIndicationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_indications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Indications/get_indications',
            indications__pb2.GetIndicationsRequest.SerializeToString,
            indications__pb2.IndicationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def post_indication_type(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Indications/post_indication_type',
            indications__pb2.PostIndicationTypeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_indication_types(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Indications/get_indication_types',
            indications__pb2.GetIndicationsTypesRequest.SerializeToString,
            indications__pb2.IndicationsTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
